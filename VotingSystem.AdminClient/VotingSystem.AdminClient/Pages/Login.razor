@page "/login"
@using VotingSystem.AdminClient.ViewModels
@using VotingSystem.AdminClient.Services
@using Microsoft.AspNetCore.Components.Forms
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="card shadow-sm p-4" style="width: 100%; max-width: 400px;">
        <h3 class="text-center mb-4">Login</h3>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @errorMessage
            </div>
        }

        <EditForm EditContext="@editContext" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>

            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>

            <button type="submit" class="btn btn-primary w-100" disabled="@isSubmitting">
                Login
            </button>
        </EditForm>
    </div>
</div>

@code {
    private LoginViewModel loginModel = new();
    private EditContext editContext;
    private bool isSubmitting = false;
    private string errorMessage = string.Empty;

    protected override void OnInitialized()
    {
        editContext = new EditContext(loginModel);
    }

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;
        isSubmitting = true;

        if (!editContext.Validate())
        {
            isSubmitting = false;
            return;
        }

        var success = await AuthService.LoginAsync(loginModel);

        if (success)
        {
            Navigation.NavigateTo("/mypolls");
        }
        else
        {
            errorMessage = "Wrong login data";
        }

        isSubmitting = false;
    }
}